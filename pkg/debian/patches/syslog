Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 tb-pulse (0.7-4) unstable; urgency=low
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
Author: Sajal Kayan <sajal@turbobytes.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- tb-pulse-0.7.orig/deploy-minion.sh
+++ tb-pulse-0.7/deploy-minion.sh
@@ -5,87 +5,88 @@
 
 #Check if minion is latest or not...
 
-exec | logger -t minion
-exec 2>&1
+main_function {
+	#Some autodetction for OS...
+	if [ "$OS" = "" ]; then
+		unamestr=`uname`
+		if [ "$unamestr" = 'Linux' ]; then
+		   OS='linux'
+		fi
+	fi
+
+	#Some autodetction for ARCH...
+	if [ "$ARCH" = "" ]; then
+		unamestr=`uname -m`
+		#Matches my laptop
+		if [ "$unamestr" = 'x86_64' ]; then
+		   ARCH='amd64'
+		fi
+		#Matches rpi debian
+		if [ "$unamestr" = 'armv6l' ]; then
+		   ARCH='arm'
+		fi
+		#Matches online labs c4
+		if [ "$unamestr" = 'armv7l' ]; then
+		   ARCH='arm'
+		fi
+	fi
+
+	if [ "$OS" = "" ]; then
+		echo "Must provide enviornment variable OS"
+		exit 1
+	fi
+
+
+	if [ "$ARCH" = "" ]; then
+		echo "Must provide enviornment variable ARCH"
+		exit 1
+	fi
+
+	TARFILE="minion.$OS.$ARCH.tar.gz"
+	SHAFILE="minion.$OS.$ARCH.tar.gz.sha256sum"
+	BASEURL="https://s3.amazonaws.com/tb-minion/"
+
+	echo "$TARFILE $SHAFILE"
+	#set -o xtrace
+	while :
+	do
+		if [ ! -f current ]; then
+		    echo "none" > current
+		fi
+
+		if [ ! -f $TARFILE ]; then
+		    echo "none" > current
+		fi
+
+		if [ ! -f minion ]; then
+		    echo "none" > current
+		fi
+
+		curl -so latest "${BASEURL}latest"
+
+		diff --brief current latest >/dev/null
+		comp_value=$?
+
+		if [ $comp_value -eq 1 ]
+		then
+			#Current did not match latest
+		    echo "need to upgrade..."
+		    curl -so "$TARFILE" "$BASEURL$TARFILE"
+		    curl -so "$SHAFILE" "$BASEURL$SHAFILE"
+		    sha256sum -c "$SHAFILE" > /dev/null
+		    if [ $? -eq 0 ]
+		    then
+		    	echo "Successfully downloaded"
+		    	tar -xf "$TARFILE"
+		    	cp latest current
+		    fi
+		else
+		    echo "no need to upgrade..."
+		fi
+
+		./minion -cnc="distdns.turbobytes.com:7777" $EXTRAARGS
+		sleep 60 #rest for a minute... Avoid crash loop...
+	done
+}
 
-#Some autodetction for OS...
-if [ "$OS" = "" ]; then
-	unamestr=`uname`
-	if [ "$unamestr" = 'Linux' ]; then
-	   OS='linux'
-	fi
-fi
-
-#Some autodetction for ARCH...
-if [ "$ARCH" = "" ]; then
-	unamestr=`uname -m`
-	#Matches my laptop
-	if [ "$unamestr" = 'x86_64' ]; then
-	   ARCH='amd64'
-	fi
-	#Matches rpi debian
-	if [ "$unamestr" = 'armv6l' ]; then
-	   ARCH='arm'
-	fi
-	#Matches online labs c4
-	if [ "$unamestr" = 'armv7l' ]; then
-	   ARCH='arm'
-	fi
-fi
-
-if [ "$OS" = "" ]; then
-	echo "Must provide enviornment variable OS"
-	exit 1
-fi
-
-
-if [ "$ARCH" = "" ]; then
-	echo "Must provide enviornment variable ARCH"
-	exit 1
-fi
-
-TARFILE="minion.$OS.$ARCH.tar.gz"
-SHAFILE="minion.$OS.$ARCH.tar.gz.sha256sum"
-BASEURL="https://s3.amazonaws.com/tb-minion/"
-
-echo "$TARFILE $SHAFILE"
-#set -o xtrace
-while :
-do
-	if [ ! -f current ]; then
-	    echo "none" > current
-	fi
-
-	if [ ! -f $TARFILE ]; then
-	    echo "none" > current
-	fi
-
-	if [ ! -f minion ]; then
-	    echo "none" > current
-	fi
-
-	curl -so latest "${BASEURL}latest"
-
-	diff --brief current latest >/dev/null
-	comp_value=$?
-
-	if [ $comp_value -eq 1 ]
-	then
-		#Current did not match latest
-	    echo "need to upgrade..."
-	    curl -so "$TARFILE" "$BASEURL$TARFILE"
-	    curl -so "$SHAFILE" "$BASEURL$SHAFILE"
-	    sha256sum -c "$SHAFILE" > /dev/null
-	    if [ $? -eq 0 ]
-	    then
-	    	echo "Successfully downloaded"
-	    	tar -xf "$TARFILE"
-	    	cp latest current
-	    fi
-	else
-	    echo "no need to upgrade..."
-	fi
-
-	./minion -cnc="distdns.turbobytes.com:7777" $EXTRAARGS
-	sleep 60 #rest for a minute... Avoid crash loop...
-done
\ No newline at end of file
+main_function 2>&1 | logger -t minion
\ No newline at end of file
